import logging
from pathlib import Path
from uuid import uuid4

from django.apps import apps
from django.conf import settings
from django.db.models import Model

logger = logging.getLogger(__name__)


def get_object_by_model_id_app(
    model_name: str, object_id: str | int, app_label: str
) -> Model:
    try:
        model_class = apps.get_model(
            app_label=app_label, model_name=model_name
        )
        obj = model_class.objects.get(id=int(object_id))
        return obj
    except model_class.DoesNotExist as error:
        logger.error(f"Error occur wile trying to get object: {error}")
        raise model_class.DoesNotExist


def get_renamed_image_path(instance: Model, filename: str) -> str:
    new_file_name = uuid4().hex
    file_extension = Path(filename).suffix
    logger.info(
        (
            f"File: {filename}, "
            f"Instance: {instance}, "
            f"Old file name: {filename}, "
            f"New file name: {new_file_name}{file_extension},"
        )
    )
    return (
        f"{instance.__class__.__name__.lower()}"
        "/"
        f"{new_file_name}"
        f"{file_extension}"
    )


def get_tg_msg(order) -> str:
    fields = "\n".join([f"‚ûñ {x}: {y}" for x, y in order.stamp_text.items()])
    stamp_url = settings.HOST + order.printy.get_absolute_url()
    printy_url = settings.HOST + order.stamp.get_absolute_url()
    return f"""
üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ{order.id}*

‚ûñ –ü–µ—á–∞—Ç—å: [{order.stamp.title}]({stamp_url})
‚ûñ –®—Ç–∞–º–ø: [{order.printy.title}]({printy_url})

‚úèÔ∏è *–ù–∞–¥–ø–∏—Å—å –Ω–∞ –ø–µ—á–∞—Ç–∏*
{fields}

üßë‚Äçüîß *–ó–∞–∫–∞–∑—á–∏–∫*
‚ûñ Email: {order.email}
‚ûñ –¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}
‚ûñ –ò–º—è: {order.name}
‚ûñ –ê–¥—Ä–µ—Å: {order.address}
‚ûñ –ì–æ—Ä–æ–¥: {order.city}
‚ûñ –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {order.postal_code}
‚ûñ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ÃÜ: {order.comment}
"""
